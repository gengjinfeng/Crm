@model CRM.Repository.Customer
@{
    ViewBag.Title = "编辑客户";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/bootstrap-responsive.min.css" rel="stylesheet" />
<link href="~/Content/font-awesome.min.css" rel="stylesheet" />
<link href="~/Content/style-metro.css" rel="stylesheet" />
<link href="~/Content/style.css" rel="stylesheet" />
<link href="~/Content/style-responsive.css" rel="stylesheet" />
<link href="~/Content/default.css" rel="stylesheet" />
<link href="~/Content/uniform.default.css" rel="stylesheet" />
<link href="~/Content/select2_metro.css" rel="stylesheet" />
<script type="text/javascript">

    function InitDropDownList() {
        var count = $("#Status option").length;
        for (var i = 0; i < count; i++) {
            if ($("#Status ").get(0).options[i].text == '@Model.Status') {
                $("#Status ").get(0).options[i].selected = true;
                break;
            }
        }
    }

    function slideToggle10() {
        $("#divObj10").slideToggle(1000);//窗帘效果的切换,点一下收,点一下开,参数可以无,参数说明同上
        InitDropDownList();
    }
    function slideToggle20() {
        $("#divObj20").slideToggle(1000);//窗帘效果的切换,点一下收,点一下开,参数可以无,参数说明同上
    }

    function SingleMove(id, PoolStatus, OperationTitle) {
        art.dialog.confirm('你确定要将该客户' + OperationTitle + '吗？', function () {
            $.post('/Customer/Move', { Ids: id, PoolStatus: PoolStatus }, function (result) {
                if (result.success) {
                    art.dialog({
                        icon: 'succeed',
                        content: '操作成功！',
                        ok: function () {
                            //关闭窗口
                            art.dialog.close();
                            window.opener = null;
                            window.close();
                        }
                    });

                } else {
                    art.dialog.alert(result.message)
                    art.dialog.close();
                }
            });
        }, function () {
            return;
        });


    }
</script>
<p></p>
<div class="portlet box blue">

    <div class="portlet-title">
        <div class="caption"><i class="icon-reorder"></i>编辑客户基本信息</div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
        </div>

    </div>
    <div class="portlet-body form">
        @using (Ajax.BeginForm("Edit", "Customer", new AjaxOptions() { HttpMethod = "POST" }, new { id = "customerForm", @class = "form-horizontal", novalidate = "novalidate" }))
        {
            @Html.HiddenFor(x => x.CustomerID)
            @Html.HiddenFor(x => x.Owner)
            @Html.HiddenFor(x=>x.CreateDate)
            @Html.HiddenFor(x=>x.PoolStatus)
            @Html.HiddenFor(x=>x.DepartmentID)
            @Html.HiddenFor(x => x.CorporationName)
            @Html.HiddenFor(x=>x.Creator)
            <div >
                <button type="button" class="btn green" onclick="Save();">保存</button>
                <button type="submit" class="btn green">保存并关闭</button>
                @Html.ActionLink("返回列表", "BackToList", null, new { @class = "btn red" })
                <a href="javascript:;" onclick="SingleMove('@Model.CustomerID',2, '移入公共池');" class="btn red">移入公共池</a>
            </div>

            <div class="row-fluid">
                <div class="span12 ">
                    <div class="control-group">
                        <label class="control-label">公司名称<span class="required">*</span></label>
                        <div class="controls">
                            @Html.TextBoxFor(x => x.CorporationName, new { @class = "m-wrap span12",@readonly=true })
                        </div>
                    </div>

                </div>
            </div>

            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">姓名</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.CustomerName))
                            {
                                @Html.TextBoxFor(x => x.CustomerName, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.CustomerName, new { @class = "m-wrap span12"})
                            }
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">状态</label>
                        <div class="controls">
                            <select class="m-wrap span12" id="Status" name="Status">
                                <option value="0类">0类</option>
                                <option value="1类">1类</option>
                                <option value="2类">2类</option>
                                <option value="普3类">普3类</option>
                                <option value="重3类">重3类</option>
                                <option value="4类">4类</option>
                                <option value="重4类">重4类</option>
                                <option value="5类">5类</option>
                                <option value="6类">6类</option>
                                <option value="9类">9类</option>
                                <option value="已联系">已联系</option>
                                <option value="错误信息">错误信息</option>
                                <option value="不是收费会员">不是收费会员</option>
                                <option value="无合作意向">无合作意向</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">行业</label>
                        <div class="controls">
                            @Html.DropDownListFor(x => x.Industry, ViewData["Industry"] as SelectList, new { @class = "m-wrap span12" })
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">部门</label>
                        <div class="controls">
                            @Html.DropDownListFor(x => x.DepartmentID, ViewBag.DepartmentList as SelectList, new { @class = "m-wrap span12", @disabled = true })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">电话</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.Tel))
                            {
                                @Html.TextBoxFor(x => x.Tel, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                            @Html.TextBoxFor(x => x.Tel, new { @class = "m-wrap span12" })
                            }
                            
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">传真</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.Fax))
                            {
                                @Html.TextBoxFor(x => x.Fax, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                            @Html.TextBoxFor(x => x.Fax, new { @class = "m-wrap span12" })
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">城市</label>
                        <div class="controls">
                            @Html.TextBoxFor(x => x.City, new { @class = "m-wrap span12" })
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">手机</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.MobileTel))
                            {
                                @Html.TextBoxFor(x => x.MobileTel, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                            @Html.TextBoxFor(x => x.MobileTel, new { @class = "m-wrap span12" })
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">来源类型（填）</label>
                        <div class="controls">
                            @Html.DropDownListFor(x => x.SourseFrom, ViewBag.SourceFrom as SelectList, new { @class = "m-wrap span12" })
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">类型</label>
                        <div class="controls">
                            @Html.DropDownListFor(x => x.CustomerType, new List<SelectListItem>() { new SelectListItem() { Text = "普通客户", Value = "普通客户" } }, new { @class = "m-wrap span12", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">下次联系时间</label>
                        <div class="controls">
                            @Html.TextBoxFor(x => x.NextContactTime, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">最新修改时间</label>
                        <div class="controls">
                            @Html.TextBoxFor(x => x.LastModify, new { @class = "m-wrap span12 definewidth91 Wdate", @readonly = true })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">创建时间</label>
                        <div class="controls">
                            @Html.TextBoxFor(x => x.CreateDate, new { @class = "m-wrap span12", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">最新入库时间</label>
                        <div class="controls">
                            @Html.TextBoxFor(x => x.BelongDateTime, new { @class = "m-wrap span12", @readonly = true })
                        </div>
                    </div>
                </div>
            </div>
            @*<div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">省份（填）</label>
                        <div class="controls">
                            @Html.TextBoxFor(x => x.Province, new { @class = "m-wrap span12" })
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">注册资金（万）</label>
                        <div class="controls">
                            @Html.TextBoxFor(x => x.RegisteredCapital, new { @class = "m-wrap span12" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row-fluid">

                <div class="span12 ">

                    <div class="control-group">

                        <label class="control-label">地址</label>

                        <div class="controls">
                            @Html.TextBoxFor(x => x.Address, new { @class = "m-wrap span12" })
                        </div>

                    </div>

                </div>
            </div>*@
            <div class="row-fluid">

                <div class="span12 ">

                    <div class="control-group">

                        <label class="control-label">网址</label>

                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.WebSite))
                            {
                                @Html.TextBoxFor(x => x.WebSite, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                            @Html.TextBoxFor(x => x.WebSite, new { @class = "m-wrap span12" })
                            }
                        </div>

                    </div>

                </div>
            </div>
            @*<div class="row-fluid">

                <div class="span12 ">

                    <div class="control-group">

                        <label class="control-label">网址(备注)</label>

                        <div class="controls">
                            @Html.TextBoxFor(x => x.WebSiteRemark, new { @class = "m-wrap span12" })
                        </div>

                    </div>

                </div>
            </div>*@
            <div class="row-fluid">

                <div class="span12 ">

                    <div class="control-group">

                        <label class="control-label">电子邮件</label>

                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.Email))
                            {
                                @Html.TextBoxFor(x => x.Email, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                            @Html.TextBoxFor(x => x.Email, new { @class = "m-wrap span12" })
                            }
                        </div>

                    </div>

                </div>
            </div>
            <div class="row-fluid">

                <div class="span12 ">

                    <div class="control-group">

                        <label class="control-label">描述</label>

                        <div class="controls">
                            @Html.TextAreaFor(x => x.Description, new { @class = "form-control" ,rows=8})
                        </div>

                    </div>

                </div>
            </div>
            @*<p></p>
    <p>
                <input type="button" value="展开小计" class="btn blue" onclick="slideToggle10()" />
            </p>
    <div id="divObj10" style="display:none">
*@
            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">第一次联系时间</label>
                        <div class="controls">
                            @if (Model.FirstContactDate.HasValue)
                            {
                                @Html.TextBoxFor(x => x.FirstContactDate, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.FirstContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                            }
                            
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">小记一</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.FirstRemark))
                            {
                                @Html.TextAreaFor(x => x.FirstRemark, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.FirstRemark, new { @class = "form-control" })
                            }
                            
                        </div>
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">第二次联系时间</label>
                        <div class="controls">
                            @if (Model.SecondContactDate.HasValue)
                            {
                                @Html.TextBoxFor(x => x.SecondContactDate, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.SecondContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                            }
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">小记二</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.SecondRemark))
                            {
                                @Html.TextAreaFor(x => x.SecondRemark, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.SecondRemark, new { @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">第三次联系时间</label>
                        <div class="controls">
                            @if (Model.ThirdContactDate.HasValue)
                            {
                                @Html.TextBoxFor(x => x.ThirdContactDate, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.ThirdContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                            }
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">小记三</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.ThirdRemark))
                            {
                                @Html.TextAreaFor(x => x.ThirdRemark, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.ThirdRemark, new { @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">第四次联系时间</label>
                        <div class="controls">
                            @if (Model.FourthContactDate.HasValue)
                            {
                                @Html.TextBoxFor(x => x.FourthContactDate, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.FourthContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                            }
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">小记四</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.FourthRemark))
                            {
                                @Html.TextAreaFor(x => x.FourthRemark, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.FourthRemark, new { @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">第五次联系时间</label>
                        <div class="controls">
                            @if (Model.FifthContactDate.HasValue)
                            {
                                @Html.TextBoxFor(x => x.FifthContactDate, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.FifthContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                            }
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">小记五</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.FifthRemark))
                            {
                                @Html.TextAreaFor(x => x.FifthRemark, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.FifthRemark, new { @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">第六次联系时间</label>
                        <div class="controls">
                            @if (Model.SixthContactDate.HasValue)
                            {
                                @Html.TextBoxFor(x => x.SixthContactDate, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.SixthContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                            }
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">小记六</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.SixthRemark))
                            {
                                @Html.TextAreaFor(x => x.SixthRemark, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.SixthRemark, new { @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">第七次联系时间</label>
                        <div class="controls">
                            @if (Model.SeventhContactDate.HasValue)
                            {
                                @Html.TextBoxFor(x => x.SeventhContactDate, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.SeventhContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                            }
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">小记七</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.SeventhRemark))
                            {
                                @Html.TextAreaFor(x => x.SeventhRemark, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.SeventhRemark, new { @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">第八次联系时间</label>
                        <div class="controls">
                            @if (Model.EighthContactDate.HasValue)
                            {
                                @Html.TextBoxFor(x => x.EighthContactDate, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.EighthContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                            }
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">小记八</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.EighthRemark))
                            {
                                @Html.TextAreaFor(x => x.EighthRemark, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.EighthRemark, new { @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">第九次联系时间</label>
                        <div class="controls">
                            @if (Model.NinthContactDate.HasValue)
                            {
                                @Html.TextBoxFor(x => x.NinthContactDate, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.NinthContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                            }
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">小记九</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.NinthRemark))
                            {
                                @Html.TextAreaFor(x => x.NinthRemark, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.NinthRemark, new { @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">第十次联系时间</label>
                        <div class="controls">
                            @if (Model.TenthContactDate.HasValue)
                            {
                                @Html.TextBoxFor(x => x.TenthContactDate, new { @class = "m-wrap span12", @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(x => x.TenthContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                            }
                        </div>
                    </div>
                </div>
                <div class="span6 ">
                    <div class="control-group">
                        <label class="control-label">小记十</label>
                        <div class="controls">
                            @if (!string.IsNullOrEmpty(Model.TenthRemark))
                            {
                                @Html.TextAreaFor(x => x.TenthRemark, new { @class = "form-control", @readonly = true })
                            }
                            else
                            {
                                @Html.TextAreaFor(x => x.TenthRemark, new { @class = "form-control" })
                            }
                        </div>
                    </div>
                </div>
            </div>
                   @*</div>*@
            
    <p>
                <input type="button" value="展开小计" class="btn blue" onclick="slideToggle20()" />
            </p> 
    <div id="divObj20" style="display:none">
        <div class="row-fluid">
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">第十一次联系时间</label>
                    <div class="controls">
                        @if (Model.ElevenContactDate.HasValue)
                        {
                            @Html.TextBoxFor(x => x.ElevenContactDate, new { @class = "m-wrap span12", @readonly = true })
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.ElevenContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                        }
                    </div>
                </div>
            </div>
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">小记十一</label>
                    <div class="controls">
                        @if (!string.IsNullOrEmpty(Model.ElevenRemark))
                        {
                            @Html.TextAreaFor(x => x.ElevenRemark, new { @class = "form-control", @readonly = true })
                        }
                        else
                        {
                            @Html.TextAreaFor(x => x.ElevenRemark, new { @class = "form-control" })
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">第十二次联系时间</label>
                    <div class="controls">
                        @if (Model.twelveContactDate.HasValue)
                        {
                            @Html.TextBoxFor(x => x.twelveContactDate, new { @class = "m-wrap span12", @readonly = true })
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.twelveContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                        }
                    </div>
                </div>
            </div>
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">小记十二</label>
                    <div class="controls">
                        @if (!string.IsNullOrEmpty(Model.twelveRemark))
                        {
                            @Html.TextAreaFor(x => x.twelveRemark, new { @class = "form-control", @readonly = true })
                        }
                        else
                        {
                            @Html.TextAreaFor(x => x.twelveRemark, new { @class = "form-control" })
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">第十三次联系时间</label>
                    <div class="controls">
                        @if (Model.thirteenContactDate.HasValue)
                        {
                            @Html.TextBoxFor(x => x.thirteenContactDate, new { @class = "m-wrap span12", @readonly = true })
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.thirteenContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                        }
                    </div>
                </div>
            </div>
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">小记十三</label>
                    <div class="controls">
                        @if (!string.IsNullOrEmpty(Model.thirteenRemark))
                        {
                            @Html.TextAreaFor(x => x.thirteenRemark, new { @class = "form-control", @readonly = true })
                        }
                        else
                        {
                            @Html.TextAreaFor(x => x.thirteenRemark, new { @class = "form-control" })
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">第十四次联系时间</label>
                    <div class="controls">
                        @if (Model.fourteenContactDate.HasValue)
                        {
                            @Html.TextBoxFor(x => x.fourteenContactDate, new { @class = "m-wrap span12", @readonly = true })
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.fourteenContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                        }
                    </div>
                </div>
            </div>
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">小记十四</label>
                    <div class="controls">
                        @if (!string.IsNullOrEmpty(Model.fourteenRemark))
                        {
                            @Html.TextAreaFor(x => x.fourteenRemark, new { @class = "form-control", @readonly = true })
                        }
                        else
                        {
                            @Html.TextAreaFor(x => x.fourteenRemark, new { @class = "form-control" })
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">第十五次联系时间</label>
                    <div class="controls">
                        @if (Model.FifthContactDate.HasValue)
                        {
                            @Html.TextBoxFor(x => x.FifthContactDate, new { @class = "m-wrap span12", @readonly = true })
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.FifthContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                        }
                    </div>
                </div>
            </div>
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">小记十五</label>
                    <div class="controls">
                        @if (!string.IsNullOrEmpty(Model.FifthRemark))
                        {
                            @Html.TextAreaFor(x => x.FifthRemark, new { @class = "form-control", @readonly = true })
                        }
                        else
                        {
                            @Html.TextAreaFor(x => x.FifthRemark, new { @class = "form-control" })
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">第十六次联系时间</label>
                    <div class="controls">
                        @if (Model.sixteenContactDate.HasValue)
                        {
                            @Html.TextBoxFor(x => x.sixteenContactDate, new { @class = "m-wrap span12", @readonly = true })
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.sixteenContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                        }
                    </div>
                </div>
            </div>
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">小记十六</label>
                    <div class="controls">
                        @if (!string.IsNullOrEmpty(Model.sixteenRemark))
                        {
                            @Html.TextAreaFor(x => x.sixteenRemark, new { @class = "form-control", @readonly = true })
                        }
                        else
                        {
                            @Html.TextAreaFor(x => x.sixteenRemark, new { @class = "form-control" })
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">第十七次联系时间</label>
                    <div class="controls">
                        @if (Model.seventeenContactDate.HasValue)
                        {
                            @Html.TextBoxFor(x => x.seventeenContactDate, new { @class = "m-wrap span12", @readonly = true })
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.seventeenContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                        }
                    </div>
                </div>
            </div>
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">小记十七</label>
                    <div class="controls">
                        @if (!string.IsNullOrEmpty(Model.seventeenRemark))
                        {
                            @Html.TextAreaFor(x => x.seventeenRemark, new { @class = "form-control", @readonly = true })
                        }
                        else
                        {
                            @Html.TextAreaFor(x => x.seventeenRemark, new { @class = "form-control" })
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">第十八次联系时间</label>
                    <div class="controls">
                        @if (Model.eighteenContactDate.HasValue)
                        {
                            @Html.TextBoxFor(x => x.eighteenContactDate, new { @class = "m-wrap span12", @readonly = true })
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.eighteenContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                        }
                    </div>
                </div>
            </div>
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">小记十八</label>
                    <div class="controls">
                        @if (!string.IsNullOrEmpty(Model.eighteenRemark))
                        {
                            @Html.TextAreaFor(x => x.eighteenRemark, new { @class = "form-control", @readonly = true })
                        }
                        else
                        {
                            @Html.TextAreaFor(x => x.eighteenRemark, new { @class = "form-control" })
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">第十九次联系时间</label>
                    <div class="controls">
                        @if (Model.nineteenContactDate.HasValue)
                        {
                            @Html.TextBoxFor(x => x.nineteenContactDate, new { @class = "m-wrap span12", @readonly = true })
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.nineteenContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                        }
                    </div>
                </div>
            </div>
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">小记十九</label>
                    <div class="controls">
                        @if (!string.IsNullOrEmpty(Model.nineteenRemark))
                        {
                            @Html.TextAreaFor(x => x.nineteenRemark, new { @class = "form-control", @readonly = true })
                        }
                        else
                        {
                            @Html.TextAreaFor(x => x.nineteenRemark, new { @class = "form-control" })
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">第二十次联系时间</label>
                    <div class="controls">
                        @if (Model.twentyContactDate.HasValue)
                        {
                            @Html.TextBoxFor(x => x.twentyContactDate, new { @class = "m-wrap span12", @readonly = true })
                        }
                        else
                        {
                            @Html.TextBoxFor(x => x.twentyContactDate, new { @class = "m-wrap span12 definewidth91 Wdate", onfocus = "date()" })
                        }
                    </div>
                </div>
            </div>
            <div class="span6 ">
                <div class="control-group">
                    <label class="control-label">小记二十</label>
                    <div class="controls">
                        @if (!string.IsNullOrEmpty(Model.twentyRemark))
                        {
                            @Html.TextAreaFor(x => x.twentyRemark, new { @class = "form-control", @readonly = true })
                        }
                        else
                        {
                            @Html.TextAreaFor(x => x.twentyRemark, new { @class = "form-control" })
                        }
                    </div>
                </div>
            </div>
        </div>

    </div>
            
            <div >
                <button type="button" class="btn green" onclick="Save();">保存</button>
                <button type="submit" class="btn green">保存并关闭</button>
                @Html.ActionLink("返回列表", "BackToList", null, new { @class = "btn red" })
                <a href="javascript:;" onclick="SingleMove('@Model.CustomerID',2, '移入公共池');" class="btn red">移入公共池</a>
            </div>
        }

        <!-- END FORM-->

    </div>

</div>
<script type="text/javascript" language="JavaScript">
    //: 判断网页是否加载完成
    document.onreadystatechange = function () {
        if (document.readyState == "complete") {
            InitDropDownList();
        }
    }
    function Save()
    {
        var json = $("#customerForm").serialize();
        $.post('/Customer/Modify', json, function (result) {
            if (result.success) {
                art.dialog({
                    icon: 'succeed',
                    content: '操作成功！',
                    ok: function () {
                        //刷新父级页面
                        var win = art.dialog.open.origin;
                        win.location.reload();
                        //关闭窗口
                        art.dialog.close();
                    }
                });

            } else {
                art.dialog.alert(result.message)
                art.dialog.close();
            }
        });
    }
</script>


